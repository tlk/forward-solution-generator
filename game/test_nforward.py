import unittest

from game import nforward

test_data1 = [0x66,0xd5,0x4e,0x28,0x5f,0xff,0x6b,0x53,0xac,0x3b,0x34,0x14,0xb5,0x3c,0xb2,0xc6,
              0xa4,0x85,0x1e,0x0d,0x86,0xc7,0x4f,0xba,0x75,0x5e,0xcb,0xc3,0x6e,0x48,0x79,0x8f]

test_data2 = [0x8d,0xc2,0xe1,0x51,0xab,0x55,0x97,0xb4,0xf4,0x7a,0xc3,0x53,0xaa,0xd8,0xf3,0x94,
              0xb1,0x42,0x48,0x32,0xf8,0x2b,0xfb,0xa3,0xd9,0xec,0x45,0xb7,0xc1,0x48,0x1b,0x06]

class TestNForward(unittest.TestCase):
    def test_forward(self):
        inp = test_data1
        out = "Reverse me fast\0"
        res = nforward.forward(inp)
        self.assertEqual(out, res)

    def test_forward_single_round(self):
        inp = test_data1
        out = test_data2
        res = nforward.forward_single_round(inp)
        self.assertEqual(out, res)

    def test_substitute(self):
        inp = test_data1
        out = [0xce,0x99,0xe6,0x63,0x09,0x73,0xe3,0x1c,0xa3,0x5c,0xd7,0xd3,0x66,0x81,0xbd,0x5f,
               0xc5,0xa9,0x83,0xb0,0x95,0xee,0xea,0x90,0x43,0x02,0xcc,0x07,0x38,0x8a,0x61,0xd6]
        res = nforward.substitute(inp)
        self.assertEqual(out, res)

    def test_permute(self):
        inp = [0xce,0x99,0xe6,0x63,0x09,0x73,0xe3,0x1c,0xa3,0x5c,0xd7,0xd3,0x66,0x81,0xbd,0x5f,
               0xc5,0xa9,0x83,0xb0,0x95,0xee,0xea,0x90,0x43,0x02,0xcc,0x07,0x38,0x8a,0x61,0xd6]
        out = test_data2
        res = nforward.permute(inp)
        self.assertEqual(out, res)

    def test_mix(self):
        inp = test_data2
        out = [0x72,0x6e,0x28,0x70,0x58,0x60,0xa8,0x81,0x14,0x50,0x23,0xe7,0xe0,0xbd,0x07,0x41]
        res = nforward.mix(inp)
        self.assertEqual(out, res)
